Efficient implementations of algorithms for combinatorial unranking of bounded
integer compositions, which are sometimes used in applied cryptography
(cf. hash-based signatures and sum-preserving encryption).

The implementations are based on the recent addition of bit-precise integer
types to C (N2763, standardized in C23). Therefore, a recent enough compiler is
needed; GCC and Clang were successfully tested.

This is an alternative to GMP-based implementations for use cases where the
library is not available or cannot be used. Type `make` to compile the code and
`./src/unrank` to see the available options.

Typing `make IT=$N test` unranks $N random integers for several parameter sets.
